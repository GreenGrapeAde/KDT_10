## --------------------------------------------------------
## 컨테이너 자료형 : 여러 개의 데이터를 저장할 수 있는 자료형
## -> 그 중에 순서 있는 자료형 : 시퀀스(Sequence) 자료형
## --------------------------------------------------------
## [4]-> List 자료형과 연산자
## --------------------------------------------------------
data1 = [11, 22, 33, 44, 55]
data2 = ['a', 'b', 'c']

## --------------------------------------------------------
## 산술연산자 => 덧셈 : list + list => 원소가 합쳐진 하나의 list
print(f'{data1} + {data2} = { data1 + data2 }')

#print(f'{data1} + 100 = { data1 + list(100.) }')   # primitive type => container type 형변환 안됨!
# primitive type끼리는 변환이 가능하나 container type으로는 안됨

# ★★★★★ 원소단위로 하나씩 쪼서 저장 => str은 container type이다.
print(f'{data1} + list("HAPPY") = { data1 + list("HAPPY") }')

## --------------------------------------------------------
## 산술연산자 => 덧셈 : list * int => int 숫자만큼 반복
## --------------------------------------------------------
print(f'{data1} * 3 = { data1 * 3 }')

## --------------------------------------------------------
## 멤버연산자 => 원소/요소가 맞는가 검사 in / not in
## --------------------------------------------------------
dataList = [11, 44, "apple", "summber", False]

##=> 11 데이터가 멤버인지 검사
print(f'11 in dataList    => {11 in dataList}')
print(f'apple in dataList => {"Apple" not in dataList}')