## --------------------------------------------------------
## str 전용 메서드
## --------------------------------------------------------
## 문자열에서 특정 원소/요소 인덱스 찾는 메서드 : find() / index()
## --------------------------------------------------------
## find() : 없는 요소의 경우 -1 return
## index() : 없는 요소의 경우 ERROR
## --------------------------------------------------------
data = "Good Good Good"

## [1] 2번째 'G' 인덱스 출력하기

# 첫 번째
idx = data.find("G")
# 두 번째
idx = data.find("G", idx + 1)
# 세 번째
idx = data.find("G", idx + 1)

## --------------------------------------------------------
## rfind() : reverse, 그러나 양수 인덱스만 return
## rindex()
## => str의 끝부분부터 찾기 시작함
## --------------------------------------------------------
print('마지막 G => ', data.rfind('G'))

## --------------------------------------------------------
## count() : 지정된 원소가 str 안에 몇 개/번 있는지 반환
## --------------------------------------------------------
print(f'The number of \"G\" is {data.count("G")}')
print(f'The number of \"g\" is {data.count("g")}')
print(f'The number of \"GO\" is {data.count("GO")}')

## --------------------------------------------------------
## strip() : str의 앞부분과 끝부분의 공백을 제거해주는 메서드
## => lstrip() 앞부분 공백 제거
## => rstrip() 끝부분 공백 제거
## --------------------------------------------------------
data = "   오늘은 좋은 날!  "

data1 = data.strip()
data2 = data.lstrip()
data3 = data.rstrip()

print(f'{data} : {len(data)}개')
print(f'{data1} : {len(data1)}개')
print(f'{data2} : {len(data2)}개')
print(f'{data3} : {len(data3)}개')

## --------------------------------------------------------
## strip(문자) : str의 leading과 trailing의 지정된 문자를 제거해주는 메서드
## => lstrip(문자) leading의 지정 문자 제거
## => rstrip(문자) trailing의 지정 문자 제거
## --------------------------------------------------------
data = 'Good! Good Luck!!'
print(f'{data} : { data.strip("!") }')
print(f'{data} : { data.strip("Goo") }')