## --------------------------------------------------------
## 다양한 형태의 클래스들
## - 기본: 속성 (클래스 속성/인스턴스 속성) + 메서드
## - 클래스에 따라서 구성 요소가 모두 존재하지 않을 수 있음
## - 예시
##    *class 클래스이름:
##           pass
##
##    *class 클래스이름:
##           def method_name(): pass
##           def method_name(): pass
##    *class 클래스이름:
##           클래스 속성1
##           클래스 속성2
## --------------------------------------------------------
## 예시] 속성, 메서드 모두 없는 클래스
## --------------------------------------------------------
class ProductNone:
    pass

## --------------------------------------------------------
## 예시] method만 존재하는 클래스
## --------------------------------------------------------
class Product:
    ##-> 정적 메서드. 클래스 인스턴스 속성을 사용하지 않는 메서드
    ##-> 클래스이름.메서드명()으로 사용
    def print_com():
        print("제품.com")

    ##-> 인스턴스 메서드. 객체/인스턴스 생성해야만 사용 가능한 메서드
    def print_info(self, name, count):
        print(f"제품명: {name} - {count}개")
## --------------------------------------------------------
## 인스턴스 생성
## --------------------------------------------------------
##-> 속성X, method X 
p1 = ProductNone()
print(p1.__class__, type(p1))

##-> 속성X, method O
p2 = Product()
#p2.print_com()
p2.print_info("테스트", 10)

Product.print_com()
#Product.print_info("테스트", 10) # ★★★★ self가 선언된 method는 인스턴스가 반드시 필요함