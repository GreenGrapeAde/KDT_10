## --------------------------------------------------------
## 클래스 정의 및 속성과 메서드 활용
## --------------------------------------------------------
## 클래스 정의: 제품에 대한 데이터 타입 정의
## 클래스 이름: Product
## 속      성: 제품명, 가격, 제조사, 제조일, 수량
##            인스턴스 속성  => 제품명, 가격, 제조일, 수량
##            클래스 속성   => 제조사
## 메  서  드: 제품 정보 출력하기 => 인스턴스 메서드
## --------------------------------------------------------
class Product:
    ## 클래스 속성/변수
    MAKER = 'KO'

    ## 인스턴스 생성 및 속성 초기화 메서드
    def __init__(self, name, price, mdate, count):
        self.name = name
        self.price = price
        self.mdate = mdate
        self.count = count

    ## 인스턴스 메서드(★★self) => 제품정보 출력
    def print_info(self):
        print('*' * 20)
        print(f'제품이름: {self.name}')
        print(f'제조일자: {self.mdate}')
        print(f'제품수량: {self.count}개')
        print('*' * 20)

    def calculate_price(self):
        pass

## --------------------------------------------------------
## 속성과 메서드 활용
## --------------------------------------------------------
## 객체/인스턴스 생성
tv = Product("TV", 100000, '2025/01/01', 100)
cup = Product("Cup", 2000, '2025/09/10', 5000)

## 가격 속성 출력
print(f'가격 => {tv.price}')
print(f'제조사 => {tv.MAKER} / {Product.MAKER}')

## [권장 X] 가격 변경 => 가격 속성의 값을 변경
tv.price = 135000
print(f'가격 => {tv.price}')

## 제품 정보 출력 메서드 호출
tv.print_info()

## [권장 X] 기존에 없던 속성 값을 만드는게 가능함
tv.kind = 'white'

## --------------------------------------------------------
## 클래스와 인스턴스에 포함된 속성과 메서드 확인 => __dict__
## --------------------------------------------------------
print("클래스의 __dict__")
print(Product.__dict__)
print()

print("인스턴스 tv의 __dict__")
print(tv.__dict__)
print()

print("인스턴스 cup의 __dict__")
print(cup.__dict__)
print()