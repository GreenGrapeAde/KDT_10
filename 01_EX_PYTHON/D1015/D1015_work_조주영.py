## ====================================================================
##              Python GUI Programming - TKinter 
## ====================================================================
## GUI 계산기 프로그램 (기초 수준)
## - 사칙연산(+,-,*,/) 가능
## - 지우기(Clear) 버튼
## - 결과(Result) 버튼
## - 창 크기 조절 가능
## ====================================================================

## --------------------------------------------------------------------
## 모듈 로딩 
## --------------------------------------------------------------------
from tkinter import *

## --------------------------------------------------------------------
##- 윈도우 관련 
## --------------------------------------------------------------------
window = Tk()
window.title("Calculator")
window.geometry("300x400+500+300")
window.resizable(True, True)

## --------------------------------------------------------------------
##- Frame 구역 나누기
## --------------------------------------------------------------------
top_frame = Frame(window)
top_frame.pack(pady=10)

form_frame = Frame(window)
form_frame.pack(pady=10)

btn_frame = Frame(window)
btn_frame.pack(pady=10)

## --------------------------------------------------------------------
##- 제목 라벨
## --------------------------------------------------------------------
msgLB1 = Label(top_frame, text="CALCULATOR", foreground='black', font=('Arial', 16, 'bold'))
msgLB1.pack()

## --------------------------------------------------------------------
##- 계산기 입력창
##- Grid로 할당
##- justify: 텍스트를 오른쪽으로 정렬
##- 버튼이 4열이므로 entry의 columnspan을 4로 선언
## --------------------------------------------------------------------
entry = Entry(form_frame, width=25, justify="right", font=('Arial', 14))  
entry.grid(row=0, column=0, columnspan=4, padx=5, pady=10)

## --------------------------------------------------------------------
##- 계산기 기능 함수
## --------------------------------------------------------------------
def on_click(event):
    text = event.widget['text']    # 어떤 버튼이 눌렸는 지 확인
    val = entry.get()              # entry값 받아오기
    
    if text == 'Clear':
        entry.delete(0, END)
    
    elif text == '=':
        try:                           # 숫자가 아닌 다른값을  LB에 입력했을 때 에러를 피하기 위함 
            result = eval(val)         # eval() 문자열로 표현된 식을 계산 후 반환
            entry.delete(0, END)
            entry.insert(END, str(result))

        except:
            entry.delete(0, END)
            entry.insert(END, "Error")
    
    else:
        entry.insert(END, text)

## --------------------------------------------------------------------
##- 버튼 UI
## --------------------------------------------------------------------
buttons = [
    ('7', 0, 0), ('8', 0, 1), ('9', 0, 2), ('+', 0, 3),
    ('4', 1, 0), ('5', 1, 1), ('6', 1, 2), ('-', 1, 3),
    ('1', 2, 0), ('2', 2, 1), ('3', 2, 2), ('*', 2, 3),
    ('0', 3, 0), ('.', 3, 1), ('/', 3, 2), ('=', 3, 3)
]

for (text, r, c) in buttons:
    btn = Button(btn_frame, text=text, width=5, height=2, bg="white")
    btn.grid(row=r, column=c, padx=3, pady=3)

    # 버튼 바인딩
    btn.bind("<Button-1>", on_click)

## Clear 버튼 따로 추가
clear_btn = Button(btn_frame, text="Clear", width=27, height=2, bg="lightblue")
clear_btn.grid(row=4, column=0, columnspan=4)

# 버튼 바인딩
clear_btn.bind("<Button-1>", on_click)


## --------------------------------------------------------------------
##- 윈도우 실행
## --------------------------------------------------------------------
window.mainloop()