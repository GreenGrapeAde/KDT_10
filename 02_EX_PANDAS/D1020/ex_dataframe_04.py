## ==========================================================
## Series 인스턴스/객체 생성 - 다양한 방식
## ==========================================================
##-> 모듈 로딩
## ----------------------------------------------------------
import pandas as pd


## ----------------------------------------------------------
##-> 데이터 준비
## ----------------------------------------------------------
nameSR = ['홍길동', '마징가', '김동현']
ageSR = ['6', '7', '3']

## ----------------------------------------------------------
## 함수 기능: DataFrame 객체의 속성 출력 기능
## 함수 이름: print_attr
## 매개변수: df          - 시리즈 인스턴스/객체
##         df_name      - 시리즈 인스턴스/객체 이름
## 반환결과: 없음
## ----------------------------------------------------------
def print_attr(df, df_name):
    print(f'\n---[{df_name} 속성 읽기]---')
    print(f'인덱스: {df.index}')
    print(f'컬럼즈: {df.columns}')
    print(f'데이터:\n{df.values}, \n{type(df.values)}')  ## 실제 메모리에 저장된 데이터
    print(f'형  태: {df.shape}')         ## 1차원으로 원소 수 반환
    print(f'차  원: {df.ndim}차원')      ## 1차원
    print(f'타  입:\n{df.dtypes}')       ## 컬럼별 타입
    print(f'데이터프레임:\n{df}')

## ----------------------------------------------------------
##-> DataFrame으로 변환 저장
## ----------------------------------------------------------
## -> list/tuple 타입은 가로, 행단위로 저장
dataDF1 = pd.DataFrame([nameSR, ageSR])

## -> Key: Value 형태의 Dict 타입은 Key가 컬럼명, 세로로 컬럼단위 저장
dataDF2 = pd.DataFrame({'name': nameSR, 'age': ageSR})
## ----------------------------------------------------------
##-> DataFrame 인스턴스의 속성 읽기
## ----------------------------------------------------------
## 변환 저장한 csv 데이터 확인

##-> Data, index, columns
print_attr(dataDF1, 'dataDF1')
print_attr(dataDF2, 'dataDF2')