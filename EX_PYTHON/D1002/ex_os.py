## --------------------------------------------------------
##                       내장 패키지 os 활용
## - os -> 운영체제와 상호작용할 수 있는 파이썬 표준 모듈
## -    -> 파일/디렉토리 관리, 경로 처리, 환경 변수 접근 자주 활용
## --------------------------------------------------------
## [1] 모듈 로딩
## --------------------------------------------------------
import os

## --------------------------------------------------------
## [1] 모듈 기본 활용
## --------------------------------------------------------
## => 현재 작업 디렉토리 확인
print(f'현재 작업 디렉토리: {os.getcwd()}')  ## Current Working Directory

## => 디렉토리 변경
# os.chdir("C:/Users")
# print(f'변경된 작업 디렉토리: {os.getcwd()}')

## --------------------------------------------------------
## [2] 디렉토리 및 파일 생성 / 삭제
## --------------------------------------------------------
## => 디렉토리 생성
os.mkdir("test_dir")

## => 여러 단계 디렉토리 생성
os.makedirs("a/b/c")

## => 파일 생성
with open("test.txt", "w") as f:
    f.write("Hello OS!")

## => 파일/디렉토리 삭제
os.remove("test.txt")
os.rmdir("test_dir")
os.removedirs("a/b/c")

## --------------------------------------------------------
## [3] 디랙토리 내 목록
## --------------------------------------------------------
## => 현재 디렉토리의 파일 / 디렉토리 리스트
files = os.listdir(".")
print(f'파일 목록: {files}')

## => 특정 확장자만 필터링
py_files = [f for f in files if f.endswith(".py")]
print(f"파이썬 파일: {py_files}")

## --------------------------------------------------------
## [4] 디렉토리 / 파일 존재여부 및 유형 체크
## --------------------------------------------------------
print("./func:", os.path.exists('./func'))
print("./ex_custom", os.path.exists('./ex_custom'))

## - 디렉토리 및 파일 여부 반환
print("Is './func' directory? =>", os.path.isdir('./func'))
print("Is './func' file? =>", os.path.isfile('./func'))

## --------------------------------------------------------
## [5] 경로 다루기
## --------------------------------------------------------
path = "C:/Users/test/example.txt"

print(f"디렉토리명         : {os.path.dirname(path)}")
print(f"파일명            : {os.path.basename(path)}")
print(f"디렉토리 + 파일 분리: {os.path.split(path)}")
print(f"확장자 분리        : {os.path.splitext(path)}")
print(f"경로 존재 여부     : {os.path.exists(path)}")